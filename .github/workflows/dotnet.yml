# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Build and Upload Artifacts

on:
  workflow_dispatch:
    inputs:
      dotnetVersion:
        type: choice
        description: .NET SDK Version
        options:
          - '.NET 8'
          - '.NET Standard 2.0'
        required: true
      os:
        type: choice
        description: Operating System
        options:
          - windows-latest
          - windows-2022
          - windows-2019
          - ubuntu-latest
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-latest
          - macos-14
          - macos-13
          - macos-12
        required: true
      arch:
        type: choice
        description: Architecture
        options:
          - x64
          - ARM64
        required: true

env:
  CORE_PATH: src/fluxiolib.core/fluxiolib.csproj
  TOOL_PATH: build/Tools/ILGenTask.csproj
  TEST_PATH: tests/FluxIOLib.Tests/FluxIOLib.Tests.csproj
  OUTPUT_DIR: build/Artifacts
  
jobs:
  build:

    runs-on: ${{ github.event.inputs.os }}
    steps:
    - name: Setup Environment Variables
      uses: thaitype/actions-switch-case@v1
      id: sdk-version
      with:
        default: 8.0.x
        conditionals-with-values: |
          ${{ github.event.inputs.dotnetVersion == '.NET 9' }} => 9.0.x
    
    - uses: thaitype/actions-switch-case@v1
      id: target-version
      with: 
        default: net8.0
        conditionals-with-values: |
          ${{ github.event.inputs.dotnetVersion == '.NET 9' }} => net9.0
          ${{ github.event.inputs.dotnetVersion == '.NET Standard 2.0' }} => netstandard2.0
    
    - uses: thaitype/actions-switch-case@v1
      id: test-mode
      with:
        default: __FEATURES_FULL__
        conditionals-with-values: |
          ${{ github.event.inputs.dotnetVersion == '.NET Standard 2.0' }} => __FEATURES_MINI__
    
    # checkout
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ steps.sdk-version.outputs.match }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.CORE_PATH }}
      
    - name: Restore dependencies (for Tools)
      run: dotnet restore ${{ env.TOOL_PATH }}
      
    - name: Restore dependencies (for Tests)
      run: dotnet restore ${{ env.TEST_PATH }}
    
    - name: Build Tools
      run: dotnet build ${{ env.TOOL_PATH }} -c Release
      if: ${{ github.event.inputs.dotnetVersion == '.NET Standard 2.0' }}
      
    - name: Build
      run: |
        dotnet build ${{ env.CORE_PATH }} --no-restore -c Release -nowarn:1701,1702,IDE1006,IDE0290,CS1591 -p:Unsafe=true -p:TargetFramework=${{ steps.target-version.outputs.match }} -p:Platform=${{ github.event.inputs.arch }} -o ${{ env.OUTPUT_DIR }}
    
    - name: Test
      run: |
        dotnet test ${{ env.TEST_PATH }} --verbosity normal -p:Platform=${{ github.event.inputs.arch }} -p:DefineConstants=${{ steps.test-mode.outputs.match }}
      
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: core-build-output
        path: ${{ env.OUTPUT_DIR }}
