<Project Sdk="Microsoft.NET.Sdk">
  
  <Import Project="../../build/common.props" />
  <PropertyGroup>
    <TargetFrameworks>net8.0;netstandard2.0</TargetFrameworks>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <Version>0.1.0</Version>
    <AssemblyTitle>fluxiolib</AssemblyTitle>
    <NoWarn>1701;1702;IDE1006</NoWarn>
    <Platforms>x64;ARM64</Platforms>
    
    <!-- DEFAULT TARGET FRAMEWORK VERSION -->
    <TargetFramework Condition="'$(TargetFramework)'==''">net8.0</TargetFramework>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)'=='net8.0'">
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <IsTrimmable>True</IsTrimmable>
    <IsAotCompatible>True</IsAotCompatible>
    <NoWarn>$(NoWarn);IDE0290</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='net8.0'">
    <Using Include="System.Runtime.CompilerServices" />
    <Using Include="System.Runtime.InteropServices" />
  </ItemGroup>
  
  <!-- 
    Instead of creating a nuget package reference to 'System.Runtime.CompilerServices.Unsafe', 
    which causes dependency issues, use the built-in implemented function. 
  -->
  <Import Project="../../build/ilgentask.props" Condition="'$(TargetFramework)'=='netstandard2.0'" />
  
</Project>
